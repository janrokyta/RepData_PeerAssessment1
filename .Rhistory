library(datasets)
data(iris)
?iris
?iris
iris
split(iris, iris$species)
head(iris)
tail(iris)
iris$Species
split(iris, iris$Species)
mean(iris$Species)
mean(iris$Sepal.Length)
lapply(split(iris, iris$Species), mean)
lapply(split(iris$Sepal.LEegth, iris$Species), mean)
lapply(split(iris$Sepal.Length, iris$Species), mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
apply(iris[, 1:4], 1, mean)
debug(ls)
ls
sapply(split(mtcars$hp, mtcars$cyl), mean)
library(datasets)
data(mtcars)
sapply(split(mtcars$hp, mtcars$cyl), mean)
?abs
?absolute difference
x <- sapply(split(mtcars$hp, mtcars$cyl), mean)
x
abs(x$4-x$8)
x$4
/x
?x
??x
x[1]
abs(x$[1]-x$[3])
abs(x[1]-x[3])
x <- matrix(1:4, 2, 2)
x
solve(x)
y <- matrix(1:9, 3, 3)
y
solve(y)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl, destfile = "./data/cameras.csv", method = "auto")
list.files("./data")
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl, destfile = "./data/cameras.csv", method = "auto")
list.files("./data")
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl, destfile = "C:\coursera\gettingdata\survey.csv", method = "auto")
list.files("./data")
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl, destfile = "C:\\coursera\\gettingdata\\survey.csv", method = "auto")
list.files("./data")
surveyData <- read.table("C:\\coursera\\gettingdata\\survey.csv", sep = ",", header = TRUE)
head(surveyData)
library(data.table)
tables()
install.packages("data.table")
library(data.table)
tables()
DT = data.table(surveyData)
tables()
DT[DT$VAL=="24",]
sum(DT[DT$VAL=="24",])
nrows(DT[DT$VAL=="24",])
nrow(DT[DT$VAL=="24",])
library(xlsx)
install.packages("xlsx")
library(xlsx)
Data <- read.xlsx("C:\\coursera\\gettingdata\\getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE)
head(cameraData)
library(xlsx)
library(xlsx)
library(xlsx)
data <- read.xlsx("C:\coursera\gettingdata\getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE)
head(cameraData)
head(data)
head(data)
NGAPdata <- read.xlsx("C:\coursera\gettingdata\getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE)
head(NGAPdata)
NGAPdata <- read.xlsx("C:\\coursera\\gettingdata\\getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE)
head(NGAPdata)
colIndex <- 7:15
rowIndex <- 18:23
NGAPdatasubset <- read.xlsx("C:\\coursera\\gettingdata\\getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,
colIndex=colIndex,rowIndex=rowIndex)
NGAPdatasubset
dat <- read.xlsx("C:\\coursera\\gettingdata\\getdata_data_DATA.gov_NGAP.xlsx",sheetIndex=1,
colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
install.packages("XML")
library(XML)
install.packages("XML")
library(XML)\
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
zipcodes <- xpathSApply(doc,"//row[@zipcode='21231']",xmlValue)
zipcodes
top = xmlRoot(doc)
xmlName(top)
names(top)
names(top[[1]])
zipcodes = xpathApply(top, "//zipcode", xmlValue)
zipcodes
nrow(zipcodes)
nodes = getNodeSet(top,"//row/zipcode")
nodes = getNodeSet(top,"//row/zipcode=21231")
nodes
print(nodes)
nodes = getNodeSet(top,"//row/zipcode==21231")
nodes = getNodeSet(top,"//row/zipcode")
nodes
zipcodes
zipcodes2 = xpathApply(top, "//zipcode=21231", xmlValue)
zipcodes2
zipcodes2 = xpathApply(top, "//zipcode[text()="21231"]", xmlValue)
zipcodes2 = xpathApply(top, "//zipcode[text()=21231']", xmlValue)
zipcodes2 = xpathApply(top, "//zipcode[text()='21231']", xmlValue)
zipcodes2
sum(zipcodes2)
nrow(zipcodes2)
zipcodes2 = xpathApply(top, "//zipcode[text()='21231']", xmlValue)
DT <- fread("C:\\coursera\\gettingdata\\getdata_data_ss06pid.csv")
library(data.table)
DT <- fread("C:\\coursera\\gettingdata\\getdata_data_ss06pid.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
result <- DT[,mean(pwgtp15),by=SEX]
system.time(result <- DT[,mean(pwgtp15),by=SEX])
system.time(result <- DT[,mean(pwgtp15),by=SEX])
system.time(result <- DT[,mean(pwgtp15),by=SEX])
system.time(result <- DT[,mean(pwgtp15),by=SEX])
system.time(result <- mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(result <- sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(result <- sapply(split(DT$pwgtp15,DT$SEX),mean))
result <- sapply(split(DT$pwgtp15,DT$SEX),mean)
result
result <- DT[,mean(pwgtp15),by=SEX]
result
system.time(result <- mean(DT$pwgtp15,by=DT$SEX))
result <- mean(DT$pwgtp15,by=DT$SEX)
result
result <- rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
result <- tapply(DT$pwgtp15,DT$SEX,mean)
result
system.time(result <- tapply(DT$pwgtp15,DT$SEX,mean))
system.time(result <- tapply(DT$pwgtp15,DT$SEX,mean))
system.time(result <- tapply(DT$pwgtp15,DT$SEX,mean))
system.time(result <- DT[,mean(pwgtp15),by=SEX])
system.time(replicate(10000,result <- DT[,mean(pwgtp15),by=SEX]))
system.time(replicate(10000,result <- sapply(split(DT$pwgtp15,DT$SEX),mean)))
system.time(replicate(10000,result <- tapply(DT$pwgtp15,DT$SEX,mean))
s
system.time(replicate(10000,result <- tapply(DT$pwgtp15,DT$SEX,mean)))
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "9d3f1cff54c1cd900065")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
4
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "9d3f1cff54c1cd900065")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(x ^ 2 * p) - sum(x * p) ^ 2
sum(x ^ 2 * p) - sum(x * p) ^ 2
mean(temp)
setwd(Z:/R/project/RepData_PeerAssessment1)
setwd("Z:/R/project/RepData_PeerAssessment1")
setwd("Z:/R/projects/RepData_PeerAssessment1")
step_date_sum <-  setNames(aggregate(activity$steps, by=list(activity$date), FUN=sum), c("date","total_steps"))
activity <- read.csv("activity.csv")
step_date_sum <-  setNames(aggregate(activity$steps, by=list(activity$date), FUN=sum), c("date","total_steps"))
step_date_sum
hist(step_date_sum$total_steps)
activity__no_na <- na.omit(activity)
step_interval_sum <- setNames(aggregate(activity__no_na$steps, by=list(activity__no_na$interval), FUN=sum), c("interval","total_steps"))
step_interval_sum
plot(step_interval_sum$interval, step_interval_sum$total_steps, type="l", xlab= "Intervals", ylab= "Number of steps")
subset(step_interval_sum, x == max(sumint$total_steps), select=c(interval, total_steps))
subset(step_interval_sum, total_steps == max(sumint$total_steps), select=c(interval, total_steps))
subset(step_interval_sum, total_steps == max(step_interval_sum$total_steps), select=c(interval, total_steps))
nrow(activity_mean[is.na(activity_mean$steps),])
nrow(activity[is.na(activity$steps),])
step_interval_mean <- setNames(aggregate(activity_no_na$steps, by=list(activity__no_na$interval), FUN=mean), c("interval","total_steps"))
activity_mean <- merge(activity, step_interval_mean, by.x = "interval", by.y = "interval")
activity_mean$steps[is.na(activity_mean$steps)] <- activity_mean$total_steps[is.na(activity_mean$steps)]
activity_no_na <- na.omit(activity)step_interval_sum <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$interval), FUN=sum), c("interval","total_steps")) plot(step_interval_sum$interval, step_interval_sum$total_steps, type="l", xlab= "Intervals", ylab= "Number of steps")
activity_no_na <- na.omit(activity)
step_interval_sum <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$interval), FUN=sum), c("interval","total_steps"))
plot(step_interval_sum$interval, step_interval_sum$total_steps, type="l", xlab= "Intervals", ylab= "Number of steps")
subset(step_interval_sum, total_steps == max(step_interval_sum$total_steps), select=c(interval, total_steps))
nrow(activity[is.na(activity$steps),])
step_interval_mean <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$interval), FUN=mean), c("interval","total_steps"))
activity_mean <- merge(activity, step_interval_mean, by.x = "interval", by.y = "interval")
activity_mean$steps[is.na(activity_mean$steps)] <- activity_mean$total_steps[is.na(activity_mean$steps)]
activity_adj <- setNames(data.frame(activity_mean$steps, activity_mean$date, activity_mean$interval), c("steps","date","interval"))
step_date_sum_adj <- setNames(aggregate(activity_no_na$steps, by=list(activity$date), FUN=sum), c("date","total_steps"))
activity_adj <- setNames(data.frame(activity_mean$steps, activity_mean$date, activity_mean$interval), c("steps","date","interval"))
step_date_sum_adj <- setNames(aggregate(activity_no_na$steps, by=list(activity$date), FUN=sum), c("date","total_steps"))
step_date_sum_adj <- setNames(aggregate(activity_adj$steps, by=list(activity_adj$date), FUN=sum), c("date","total_steps"))
hist(step_date_sum_adj$total_steps)
mean(step_date_sum_adj$total_steps, na.rm = TRUE)
median(step_date_sum_adj$total_steps, na.rm = TRUE)
mean(step_date_sum$total_steps, na.rm = TRUE)
median(step_date_sum$total_steps, na.rm = TRUE)
mean(step_date_sum_adj$total_steps, na.rm = TRUE)
median(step_date_sum_adj$total_steps, na.rm = TRUE)
Sys.setlocale("LC_TIME", "English")
activity_adj$date <- as.Date(activity_adj$date)
wdays <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
activity_adj$day <- factor((weekdays(activity_adj$date) %in% wdays),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
step_day_int_mean <- setNames(aggregate(activity_adj$steps, by=list(activity_adj$day, activity_adj$interval), FUN=mean), c("date","int","total_steps"))
step_day_int_mean
